<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="630b37fd-90fe-4212-ab1e-1073c026d013" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../idl/external/inference.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../idl/external/management.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/api_test/management_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/management.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/handler/get_model_states.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/handler/get_models.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/handler/remove_model.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/handler/update_model_config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/model_list.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/model_states.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/inference.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/management.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/rpc_idl/torch_serve/inference.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/rpc_idl/torch_serve/inference_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/rpc_idl/torch_serve/management.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/rpc_idl/torch_serve/management_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/rpc_test/management_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/service/get_model_states.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/service/service_test/get_model_state_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../rpc_sdk/post_model_manage/post_model_manage.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../rpc_sdk/post_model_manage/post_model_manage_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../rpc_sdk/torch_serve/inference.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../rpc_sdk/torch_serve/inference_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../rpc_sdk/torch_serve/management.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../rpc_sdk/torch_serve/management_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../sh/torch_serve_rpc.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../README.md" beforeDir="false" afterPath="$PROJECT_DIR$/../README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../idl/post_model_manage.proto" beforeDir="false" afterPath="$PROJECT_DIR$/../idl/post_model_manage.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/post_model_manage.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/post_model_manage.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.sh" beforeDir="false" afterPath="$PROJECT_DIR$/build.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/idl/post_model_manage.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/idl/post_model_manage/post_model_manage.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/idl/post_model_manage_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/idl/post_model_manage/post_model_manage_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../sh/post_model_manage.sh" beforeDir="false" afterPath="$PROJECT_DIR$/../sh/post_model_manage.sh" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="226CC2Z0IiSzvt355pdYW5qBbVA" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/handler" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="go" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/handler" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build post_model_manage">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="post_model_manage" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build post_model_manage" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="post_model_manage" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="post_model_manage" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetModelState in post_model_manage/rpc/rpc_test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="post_model_manage" />
      <working_directory value="$PROJECT_DIR$/rpc/rpc_test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="post_model_manage/rpc/rpc_test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetModelState\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetModelStates in post_model_manage/api/api_test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="post_model_manage" />
      <working_directory value="$PROJECT_DIR$/api/api_test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="post_model_manage/api/api_test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetModelStates\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetModelStates in post_model_manage/service/service_test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="post_model_manage" />
      <working_directory value="$PROJECT_DIR$/service/service_test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="post_model_manage/service/service_test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetModelStates\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUpdateModelConfig in post_model_manage/rpc/rpc_test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="post_model_manage" />
      <working_directory value="$PROJECT_DIR$/rpc/rpc_test" />
      <go_parameters value="-v" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="post_model_manage/rpc/rpc_test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUpdateModelConfig\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="post_model_manage" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build post_model_manage" />
      <item itemvalue="Go Test.TestUpdateModelConfig in post_model_manage/rpc/rpc_test" />
      <item itemvalue="Go Test.TestGetModelState in post_model_manage/rpc/rpc_test" />
      <item itemvalue="Go Test.TestGetModelStates in post_model_manage/api/api_test" />
      <item itemvalue="Go Test.TestGetModelStates in post_model_manage/service/service_test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build post_model_manage" />
        <item itemvalue="Go Test.TestGetModelStates in post_model_manage/service/service_test" />
        <item itemvalue="Go Test.TestGetModelStates in post_model_manage/api/api_test" />
        <item itemvalue="Go Test.TestGetModelState in post_model_manage/rpc/rpc_test" />
        <item itemvalue="Go Test.TestUpdateModelConfig in post_model_manage/rpc/rpc_test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main.go</url>
          <line>19</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main.go</url>
          <line>18</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/rpc/management.go</url>
          <line>79</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/rpc/rpc_test/management_test.go</url>
          <line>23</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/rpc/rpc_test/management_test.go</url>
          <line>21</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/service/service_test/get_model_state_test.go</url>
          <line>16</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>